AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 10
    MemorySize: 128
    Runtime: provided.al2023
    Handler: bootstrap
    Architectures:
      - arm64

Parameters:
  Environment:
    Type: String
    Description: "The environment for the Lambda function"
    AllowedValues:
      - dev
      - stg
      - prod

Conditions:
  IsDev: !Equals [!Ref Environment, dev]

Resources:
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${Environment}-users"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: email
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: EmailIndex
          KeySchema:
            - AttributeName: email
              KeyType: HASH
          Projection:
            ProjectionType: ALL

  TasksTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${Environment}-tasks"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: taskId
          AttributeType: S
        - AttributeName: userId
          AttributeType: S
      KeySchema:
        - AttributeName: taskId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: UserTasksIndex
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
          Projection:
            ProjectionType: ALL

  MainFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      FunctionName: !Sub "${Environment}-hello-function"
      CodeUri: ./
      Environment:
        Variables:
          APP_ENV: !Ref Environment
          USERS_TABLE_NAME: !Sub "${Environment}-users"
          TASKS_TABLE_NAME: !Sub "${Environment}-tasks"
          ENDPOINT_URL_DYNAMODB: !If [IsDev, "", ""]
      Events:
        Api:
          Type: HttpApi
          Properties:
            Path: /{proxy+}
            Method: ANY
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Sub "${Environment}-users"
        - DynamoDBCrudPolicy:
            TableName: !Sub "${Environment}-tasks"

Outputs:
  HelloApiEndpoint:
    Description: "API Gateway endpoint URL for Hello function"
    Value: !Sub "https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/hello"
